// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String?
  role      String   @default("STAFF")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model LoginActivity {
  id        String   @id @default(cuid())
  userId    String
  email     String
  ipAddress String?
  userAgent String?
  status    String
  createdAt DateTime @default(now())

  @@map("login_activity")
}

model Employee {
  id                    String   @id @default(cuid())
  nama                  String
  nik                   String?
  jabatan               String?
  site                  String
  tempatLahir           String?
  tanggalLahir          String?
  alamat                String?
  kontrakUpahHarian     Float
  defaultUangMakan      Float    @default(0)
  defaultUangBbm        Float    @default(0)
  bankName              String?
  bankAccount           String?
  npwp                  String?
  startDate             String?
  aktif                 Boolean  @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  payrollLines PayrollLine[]
  employeeComponentSelections EmployeeComponentSelection[]

  @@map("employees")
}

model Buyer {
  id        String   @id @default(cuid())
  name      String
  email     String?
  phone     String?
  address   String?
  company   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("buyers")
}

model PayComponent {
  id        String   @id @default(cuid())
  nama      String
  tipe      String   // 'EARNING' or 'DEDUCTION'
  taxable   Boolean  @default(false)
  metode    String   // 'FLAT', 'PER_HARI', 'PERSENTASE'
  basis     String   // 'UPAH_HARIAN', 'BRUTO', 'HARI_KERJA'
  rate      Float?
  nominal   Float?
  capMin    Float?
  capMax    Float?
  order     Int      @default(0)
  aktif     Boolean  @default(true)
  createdBy String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  payrollLineComponents PayrollLineComponent[]
  employeeComponentSelections EmployeeComponentSelection[]

  @@map("pay_components")
}

model PayrollRun {
  id           String   @id @default(cuid())
  periodeAwal  String
  periodeAkhir String
  status       String   @default("DRAFT") // 'DRAFT', 'SUBMITTED', 'APPROVED', 'PAID', 'REJECTED'
  createdBy    String
  approvedBy   String?
  notes        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  deletedAt    DateTime?

  payrollLines PayrollLine[]
  employeeComponentSelections EmployeeComponentSelection[]

  @@map("payroll_runs")
}

model PayrollLine {
  id               String   @id @default(cuid())
  payrollRunId     String
  employeeId       String
  employeeName     String
  hariKerja        Int      @default(0)
  upahHarian       Float    @default(0)
  uangMakanHarian  Float    @default(0)
  uangBbmHarian    Float    @default(0)
  overtimeHours    Float?   @default(0)
  overtimeRate     Float?   @default(1.5)
  cashbon          Float?   @default(0)
  bruto            Float    @default(0)
  pajakRate        Float?
  pajakNominal     Float?
  potonganLain     Float?   @default(0)
  neto             Float    @default(0)
  status           String   @default("DRAFT")
  notes            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  deletedAt        DateTime?

  payrollRun PayrollRun @relation(fields: [payrollRunId], references: [id], onDelete: Cascade)
  employee   Employee   @relation(fields: [employeeId], references: [id])
  payrollLineComponents PayrollLineComponent[]

  @@map("payroll_lines")
}

model PayrollLineComponent {
  id            String   @id @default(cuid())
  payrollLineId String
  componentId   String
  componentName String
  componentType String   // 'EARNING' or 'DEDUCTION'
  qty           Float?
  rate          Float?
  nominal       Float?
  amount        Float
  taxable       Boolean  @default(false)
  createdAt     DateTime @default(now())

  payrollLine PayrollLine @relation(fields: [payrollLineId], references: [id], onDelete: Cascade)
  component   PayComponent @relation(fields: [componentId], references: [id])

  @@unique([payrollLineId, componentId])
  @@map("payroll_line_components")
}

model EmployeeComponentSelection {
  id            String   @id @default(cuid())
  payrollRunId  String
  employeeId    String
  componentId   String
  componentType String   // 'standard' or 'additional'
  isSelected    Boolean  @default(true)
  customAmount  Float?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  payrollRun PayrollRun   @relation(fields: [payrollRunId], references: [id], onDelete: Cascade)
  employee   Employee     @relation(fields: [employeeId], references: [id])
  component  PayComponent @relation(fields: [componentId], references: [id])

  @@unique([payrollRunId, employeeId, componentId])
  @@map("employee_component_selections")
}

model Invoice {
  id          String   @id @default(cuid())
  number      String   @unique
  buyerId     String?
  buyerName   String
  amount      Float
  tax         Float?
  total       Float
  dueDate     DateTime
  status      String   @default("DRAFT") // 'DRAFT', 'SENT', 'PAID', 'OVERDUE'
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?

  @@map("invoices")
}

model Kwitansi {
  id              String   @id @default(cuid())
  nomorKwitansi   String   @unique
  namaPenerima    String
  namaPembayar    String
  untukPembayaran String
  jumlah          Float
  tanggal         String?
  payrollRunId    String?
  employeeId      String?
  createdBy       String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  deletedAt       DateTime?

  @@map("kwitansi")
}

model KasKecilExpense {
  id          String   @id @default(cuid())
  hari        String?
  tanggal     String?
  bulan       String?
  tipeAktivitas String?
  barang      String?
  banyak      Float?
  satuan      String?
  hargaSatuan Float?
  total       Float?
  vendorNama  String?
  vendorTelp  String?
  vendorEmail String?
  jenis       String?
  subJenis    String?
  buktiUrl    String?
  status      String   @default("DRAFT")
  notes       String?
  createdBy   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?

  @@map("kas_kecil_expenses")
}

model KasBesarTransaction {
  id          String   @id @default(cuid())
  tanggal     String?
  bulan       String?
  tipeTransaksi String?
  kategori    String?
  subKategori String?
  deskripsi   String?
  jumlah      Float?
  saldo       Float?
  status      String   @default("DRAFT")
  notes       String?
  createdBy   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?

  @@map("kas_besar_transactions")
}
